---
import Footer from '../../components/Footer.astro';
import '../../styles/home.css';
import '../../styles/components/footer.css';
---

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Chat Interface</title>
</head>
<body>
    <div class="container">
        <canvas id="curveCanvas"></canvas>
               
        <img  class="sorrel-pic"  src="../sorrel/pandaNormal.png"/>

        <div class="greeting-section">
            <div class="main-card">
                <div>DON'T PANIC</div>
                <a class="button" href="../chatbot/chatbot">Parles avec Sorrel</a>
            </div>
        </div>
        
        <!-- Bouton de déconnexion (sera ajouté par JavaScript) -->
        <div id="userControls" style="display: none; position: absolute; top: 20px; right: 20px; background: rgba(255,255,255,0.9); padding: 10px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
            <span id="userName"></span>
            <a href="/profile/profile" style="background: #6366f1; color: white; padding: 5px 10px; border-radius: 5px; margin-left: 10px; text-decoration: none; font-size: 14px;">Profile</a>
            <button id="logoutBtn" style="background: #dc2626; color: white; border: none; padding: 5px 10px; border-radius: 5px; margin-left: 10px; cursor: pointer;">Déconnexion</button>
        </div>
        
        <Footer />
    </div>

    <script>
    // Fonction pour obtenir le nom d'affichage
    function getDisplayName(user) {
        // Si l'utilisateur a un prénom et un nom
        if (user.prenom && user.nom) {
            return `${user.prenom} ${user.nom}`;
        }
        // Si l'utilisateur a seulement un prénom
        else if (user.prenom) {
            return user.prenom;
        }
        // Si l'utilisateur a seulement un nom
        else if (user.nom) {
            return user.nom;
        }
        // Sinon, utiliser le début de l'email
        else {
            return user.email.split('@')[0];
        }
    }

    // Vérification d'authentification
    async function checkAuth() {
        try {
            const response = await fetch('http://localhost:8080/auth/check', {
                credentials: 'include'
            });
            
            const data = await response.json();
            
            if (!data.authenticated) {
                // Pas connecté, rediriger vers la connexion
                window.location.href = '/connexion/connexion';
                return;
            }
            
            // Connecté, afficher les contrôles utilisateur
            const userControls = document.getElementById('userControls');
            const userName = document.getElementById('userName');
            
            if (userControls && userName) {
                userName.textContent = `Salut ${getDisplayName(data.user)} !`;
                userControls.style.display = 'block';
            }
            
        } catch (error) {
            console.error('Erreur vérification auth:', error);
            // En cas d'erreur, rediriger vers la connexion
            window.location.href = '/connexion/connexion';
        }
    }
    
    // Fonction de déconnexion
    async function logout() {
        try {
            const response = await fetch('http://localhost:8080/auth/logout', {
                method: 'POST',
                credentials: 'include'
            });
            
            if (response.ok) {
                window.location.href = '/connexion/connexion';
            }
        } catch (error) {
            console.error('Erreur déconnexion:', error);
        }
    }
    
    // Vérifier l'auth au chargement de la page
    document.addEventListener('DOMContentLoaded', checkAuth);
    
    // Ajouter l'event listener pour la déconnexion
    document.addEventListener('DOMContentLoaded', () => {
        const logoutBtn = document.getElementById('logoutBtn');
        if (logoutBtn) {
            logoutBtn.addEventListener('click', logout);
        }
    });

    // Code existant pour le canvas
    const canvas = document.getElementById('curveCanvas');
    const ctx = canvas.getContext('2d');

    function resizeCanvas() {
        canvas.width = canvas.clientWidth;
        canvas.height = canvas.clientHeight;
        drawCurve();
    }

    function drawCurve() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        ctx.beginPath();
        ctx.strokeStyle = 'white';
        ctx.lineWidth = 2;
        ctx.moveTo(0, canvas.height * 0.2);
        ctx.bezierCurveTo(canvas.width * 0.8, canvas.height * 0.2, canvas.width * 0.2, canvas.height * 0.8, canvas.width, canvas.height * 0.9);
        ctx.stroke();
    }

    window.addEventListener('resize', resizeCanvas);
    resizeCanvas();
    </script>

</body>
</html